{
  "openapi": "3.0.0",
  "info": {
    "title": "Dolibarr API",
    "description": "API for Dolibarr ERP & CRM system based on the Dolibarr documentation",
    "version": "1.0.0",
    "contact": {
      "name": "Dolibarr Documentation",
      "url": "https://wiki.dolibarr.org/index.php?title=Home"
    }
  },
  "servers": [
    {
      "url": "https://example.dolibarr.org/api/index.php",
      "description": "Dolibarr API endpoint"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Authenticate user",
        "description": "Obtain an authentication token to use with other API calls",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "User login"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "format": "password"
                  }
                },
                "required": [
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/thirdparties": {
      "get": {
        "summary": "List all third parties",
        "description": "Get a list of all third parties (customers, suppliers, etc.)",
        "tags": [
          "Third Parties"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of third parties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThirdParty"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new third party",
        "description": "Create a new third party (customer, supplier, etc.)",
        "tags": [
          "Third Parties"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdParty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Third party created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdParty"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/thirdparties/{id}": {
      "get": {
        "summary": "Get a third party by ID",
        "description": "Retrieve details of a specific third party",
        "tags": [
          "Third Parties"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the third party to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Third party details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdParty"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Third party not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a third party",
        "description": "Update an existing third party's information",
        "tags": [
          "Third Parties"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the third party to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Third party updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdParty"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Third party not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a third party",
        "description": "Delete a specific third party",
        "tags": [
          "Third Parties"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the third party to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Third party deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Third party not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "summary": "List all products",
        "description": "Get a list of all products",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new product",
        "description": "Create a new product in the system",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/invoices": {
      "get": {
        "summary": "List all invoices",
        "description": "Get a list of all invoices",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new invoice",
        "description": "Create a new invoice in the system",
        "tags": [
          "Invoices"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invoice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ThirdParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique identifier for the third party"
          },
          "name": {
            "type": "string",
            "description": "Name of the third party"
          },
          "name_alias": {
            "type": "string",
            "description": "Alias name"
          },
          "address": {
            "type": "string",
            "description": "Address of the third party"
          },
          "zip": {
            "type": "string",
            "description": "Postal/ZIP code"
          },
          "town": {
            "type": "string",
            "description": "Town/City"
          },
          "country_id": {
            "type": "integer",
            "description": "ID of the country"
          },
          "country_code": {
            "type": "string",
            "description": "Country code (ISO)"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "client": {
            "type": "integer",
            "description": "Customer status (0=no, 1=yes, 2=prospect, 3=prospect+customer)"
          },
          "supplier": {
            "type": "integer",
            "description": "Supplier status (0=no, 1=yes)"
          },
          "vat_number": {
            "type": "string",
            "description": "VAT identification number"
          }
        },
        "required": [
          "name"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique identifier for the product"
          },
          "ref": {
            "type": "string",
            "description": "Product reference/code"
          },
          "label": {
            "type": "string",
            "description": "Product name/label"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Product price excluding taxes"
          },
          "price_ttc": {
            "type": "number",
            "format": "float",
            "description": "Product price including taxes"
          },
          "vat_rate": {
            "type": "number",
            "format": "float",
            "description": "VAT rate applied to this product"
          },
          "type": {
            "type": "integer",
            "description": "Product type (0=product, 1=service)"
          },
          "status": {
            "type": "integer",
            "description": "Product status (0=disabled, 1=enabled)"
          },
          "stock_real": {
            "type": "integer",
            "description": "Current stock quantity"
          }
        },
        "required": [
          "ref",
          "label",
          "price"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique identifier for the invoice"
          },
          "ref": {
            "type": "string",
            "description": "Invoice reference/number"
          },
          "ref_client": {
            "type": "string",
            "description": "Customer reference"
          },
          "socid": {
            "type": "integer",
            "description": "ID of the related third party"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Invoice date"
          },
          "date_due": {
            "type": "string",
            "format": "date",
            "description": "Due date for payment"
          },
          "total_ht": {
            "type": "number",
            "format": "float",
            "description": "Total amount excluding taxes"
          },
          "total_tva": {
            "type": "number",
            "format": "float",
            "description": "Total VAT amount"
          },
          "total_ttc": {
            "type": "number",
            "format": "float",
            "description": "Total amount including taxes"
          },
          "status": {
            "type": "integer",
            "description": "Invoice status (0=draft, 1=validated, 2=paid, 3=cancelled)"
          },
          "lines": {
            "type": "array",
            "description": "Invoice lines/items",
            "items": {
              "$ref": "#/components/schemas/InvoiceLine"
            }
          }
        },
        "required": [
          "socid"
        ]
      },
      "InvoiceLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique identifier for the invoice line"
          },
          "fk_product": {
            "type": "integer",
            "description": "ID of the related product (if applicable)"
          },
          "description": {
            "type": "string",
            "description": "Description of the line"
          },
          "qty": {
            "type": "number",
            "format": "float",
            "description": "Quantity"
          },
          "subprice": {
            "type": "number",
            "format": "float",
            "description": "Unit price excluding taxes"
          },
          "total_ht": {
            "type": "number",
            "format": "float",
            "description": "Total for this line excluding taxes"
          },
          "total_tva": {
            "type": "number",
            "format": "float",
            "description": "Total VAT for this line"
          },
          "total_ttc": {
            "type": "number",
            "format": "float",
            "description": "Total for this line including taxes"
          },
          "vat_rate": {
            "type": "number",
            "format": "float",
            "description": "VAT rate applied to this line"
          }
        },
        "required": [
          "description",
          "qty",
          "subprice"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "DOLAPIKEY"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication operations"
    },
    {
      "name": "Third Parties",
      "description": "Operations related to third parties (customers, suppliers)"
    },
    {
      "name": "Products",
      "description": "Operations related to products and services"
    },
    {
      "name": "Invoices",
      "description": "Operations related to invoices"
    }
  ]
}