{
  "openapi": "3.0.0",
  "info": {
    "title": "RD Station API",
    "description": "API documentation for RD Station Marketing platform",
    "version": "1.0.0",
    "contact": {
      "email": "integracoes@rdstation.com"
    }
  },
  "servers": [
    {
      "url": "https://api.rd.services"
    }
  ],
  "paths": {
    "/auth/token": {
      "post": {
        "summary": "Get access token",
        "description": "Exchange authorization code for access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/revoke": {
      "post": {
        "summary": "Revoke token",
        "description": "Revoke an access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh token",
        "description": "Get a new access token using refresh token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/platform/contacts/{uuid}": {
      "get": {
        "summary": "Get contact by UUID",
        "description": "Returns a single contact by UUID",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "patch": {
        "summary": "Update contact",
        "description": "Update contact information",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/platform/contacts/fields": {
      "get": {
        "summary": "Get contact fields",
        "description": "Returns all available contact fields",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fields": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContactField"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/platform/contacts": {
      "post": {
        "summary": "Create or update contact",
        "description": "Create a new contact or update if it already exists",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "201": {
            "description": "Contact created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/platform/contacts/events": {
      "post": {
        "summary": "Create contact event",
        "description": "Register a new event for a contact",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Event accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/platform/segmentations": {
      "get": {
        "summary": "List segmentations",
        "description": "Lists all available segmentations",
        "tags": [
          "Segmentations"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "segmentations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Segmentation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/platform/segmentations/{segmentation_id}/contacts": {
      "get": {
        "summary": "Get contacts by segmentation",
        "description": "Returns all contacts in a segmentation",
        "tags": [
          "Segmentations"
        ],
        "parameters": [
          {
            "name": "segmentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Segmentation ID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    },
                    "page_info": {
                      "$ref": "#/components/schemas/PageInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Segmentation not found"
          }
        }
      }
    },
    "/platform/funnels": {
      "get": {
        "summary": "List funnels",
        "description": "Lists all available conversion funnels",
        "tags": [
          "Funnels"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "funnels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Funnel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/marketing/accounts/{account_uuid}/webhooks": {
      "get": {
        "summary": "List webhooks",
        "description": "Lists all registered webhooks",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "account_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create webhook",
        "description": "Register a new webhook",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "account_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/marketing/accounts/{account_uuid}/webhooks/{webhook_uuid}": {
      "get": {
        "summary": "Get webhook",
        "description": "Returns a single webhook by UUID",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "account_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account UUID"
          },
          {
            "name": "webhook_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Webhook UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      },
      "put": {
        "summary": "Update webhook",
        "description": "Update webhook information",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "account_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account UUID"
          },
          {
            "name": "webhook_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Webhook UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      },
      "delete": {
        "summary": "Delete webhook",
        "description": "Delete a webhook",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "account_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account UUID"
          },
          {
            "name": "webhook_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Webhook UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "TokenRequest": {
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "code"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Your client ID"
          },
          "client_secret": {
            "type": "string",
            "description": "Your client secret"
          },
          "code": {
            "type": "string",
            "description": "Authorization code"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          }
        }
      },
      "RevokeRequest": {
        "type": "object",
        "required": [
          "token",
          "token_type_hint"
        ],
        "properties": {
          "token": {
            "type": "string",
            "description": "Token to be revoked"
          },
          "token_type_hint": {
            "type": "string",
            "enum": [
              "access_token",
              "refresh_token"
            ],
            "description": "Type of token"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "refresh_token"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Your client ID"
          },
          "client_secret": {
            "type": "string",
            "description": "Your client secret"
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "job_title": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile_phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "facebook": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "legal_bases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalBase"
            }
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "job_title": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile_phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "facebook": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "legal_bases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalBase"
            }
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ContactCreate": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "job_title": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile_phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "facebook": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "legal_bases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalBase"
            }
          },
          "cf_custom_field": {
            "type": "string",
            "description": "Any custom field prefixed with cf_"
          }
        }
      },
      "LegalBase": {
        "type": "object",
        "required": [
          "category",
          "type",
          "status"
        ],
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "communications",
              "data_processing"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "consent",
              "legitimate_interest",
              "contract",
              "vital_interest",
              "public_interest",
              "legal_obligation"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "granted",
              "declined"
            ]
          }
        }
      },
      "ContactField": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "api_identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "data_type": {
            "type": "string",
            "enum": [
              "STRING",
              "TEXTAREA",
              "EMAIL",
              "NUMBER",
              "DATE",
              "BOOLEAN",
              "PHONE",
              "URL",
              "COMBOBOX",
              "MULTISELECT"
            ]
          },
          "presentation_type": {
            "type": "string"
          },
          "validation_rules": {
            "type": "object"
          }
        }
      },
      "EventCreate": {
        "type": "object",
        "required": [
          "event_type",
          "event_family",
          "payload"
        ],
        "properties": {
          "event_type": {
            "type": "string"
          },
          "event_family": {
            "type": "string",
            "enum": [
              "CDP",
              "CONVERSION",
              "OPPORTUNITY",
              "SALE",
              "CHAT"
            ]
          },
          "payload": {
            "type": "object",
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "funnel_name": {
                "type": "string"
              },
              "value": {
                "type": "number"
              },
              "conversion_identifier": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Segmentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contacts_count": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageInfo": {
        "type": "object",
        "properties": {
          "has_next": {
            "type": "boolean"
          },
          "next_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_count": {
            "type": "integer"
          }
        }
      },
      "Funnel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "event_type": {
            "type": "string"
          },
          "event_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entity_type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "http_method": {
            "type": "string",
            "enum": [
              "POST",
              "PUT",
              "PATCH"
            ]
          },
          "include_relations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "WebhookCreate": {
        "type": "object",
        "required": [
          "entity_type",
          "event_type",
          "url",
          "http_method"
        ],
        "properties": {
          "entity_type": {
            "type": "string",
            "enum": [
              "CONTACT"
            ]
          },
          "event_type": {
            "type": "string",
            "enum": [
              "CONVERTED",
              "UPDATED",
              "MARKED_OPPORTUNITY",
              "WON",
              "LOST"
            ]
          },
          "event_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "http_method": {
            "type": "string",
            "enum": [
              "POST",
              "PUT",
              "PATCH"
            ]
          },
          "include_relations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "WebhookUpdate": {
        "type": "object",
        "properties": {
          "event_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "http_method": {
            "type": "string",
            "enum": [
              "POST",
              "PUT",
              "PATCH"
            ]
          },
          "include_relations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean"
          }
        }
      }
    }
  }
}