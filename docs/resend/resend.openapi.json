{
  "openapi": "3.0.0",
  "info": {
    "title": "Resend API",
    "description": "The Resend API is organized around REST. Our API accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.",
    "version": "1.0.0",
    "contact": {
      "url": "https://resend.com/support"
    }
  },
  "servers": [
    {
      "url": "https://api.resend.com",
      "description": "Resend API base URL"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/emails": {
      "post": {
        "summary": "Send an email",
        "description": "Delivers an email to the specified recipient.",
        "tags": [
          "Emails"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/emails/{id}": {
      "get": {
        "summary": "Get an email",
        "description": "Retrieves information about an existing email.",
        "tags": [
          "Emails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the email"
          }
        ],
        "responses": {
          "200": {
            "description": "Email details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/domains": {
      "get": {
        "summary": "List domains",
        "description": "Returns a list of domains.",
        "tags": [
          "Domains"
        ],
        "responses": {
          "200": {
            "description": "List of domains retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Domain"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a domain",
        "description": "Creates a new domain.",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/domains/{id}": {
      "get": {
        "summary": "Get a domain",
        "description": "Retrieves a domain by its ID.",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the domain"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a domain",
        "description": "Deletes a domain by its ID.",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the domain"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/domains/{id}/verify": {
      "post": {
        "summary": "Verify a domain",
        "description": "Verifies a domain by its ID.",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the domain"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain verification initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "summary": "List API keys",
        "description": "Returns a list of API keys.",
        "tags": [
          "API Keys"
        ],
        "responses": {
          "200": {
            "description": "API keys retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiKey"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an API key",
        "description": "Creates a new API key.",
        "tags": [
          "API Keys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys/{id}": {
      "delete": {
        "summary": "Delete an API key",
        "description": "Deletes an API key by its ID.",
        "tags": [
          "API Keys"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the API key"
          }
        ],
        "responses": {
          "200": {
            "description": "API key deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key",
        "description": "Bearer authentication with API key"
      }
    },
    "schemas": {
      "EmailRequest": {
        "type": "object",
        "required": [
          "from",
          "to",
          "subject"
        ],
        "properties": {
          "from": {
            "type": "string",
            "description": "Email address of the sender",
            "example": "onboarding@resend.dev"
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "description": "Email address of the recipient"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Email addresses of multiple recipients"
              }
            ],
            "example": "delivered@resend.dev"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the email",
            "example": "Hello World"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string",
                "description": "BCC recipient"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "BCC recipients"
              }
            ]
          },
          "cc": {
            "oneOf": [
              {
                "type": "string",
                "description": "CC recipient"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "CC recipients"
              }
            ]
          },
          "reply_to": {
            "oneOf": [
              {
                "type": "string",
                "description": "Reply-to email address"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Reply-to email addresses"
              }
            ]
          },
          "html": {
            "type": "string",
            "description": "HTML content of the email"
          },
          "text": {
            "type": "string",
            "description": "Text content of the email"
          },
          "headers": {
            "type": "object",
            "description": "Optional email headers"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string",
                  "description": "Name of the file"
                },
                "content": {
                  "type": "string",
                  "description": "Base64 encoded content"
                },
                "path": {
                  "type": "string",
                  "description": "Path to file"
                }
              }
            },
            "description": "Email attachments"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Tag name"
                },
                "value": {
                  "type": "string",
                  "description": "Tag value"
                }
              }
            },
            "description": "Email tags for categorization"
          }
        }
      },
      "EmailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the email"
          }
        }
      },
      "EmailDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the email"
          },
          "object": {
            "type": "string",
            "enum": [
              "email"
            ],
            "description": "Object type"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Recipients of the email"
          },
          "from": {
            "type": "string",
            "description": "Sender of the email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the email was created"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the email"
          },
          "html": {
            "type": "string",
            "description": "HTML content of the email"
          },
          "text": {
            "type": "string",
            "description": "Text content of the email"
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "BCC recipients"
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "CC recipients"
          },
          "reply_to": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reply-to addresses"
          },
          "last_event": {
            "type": "string",
            "enum": [
              "sent",
              "delivered",
              "complained",
              "bounced",
              "opened",
              "clicked"
            ],
            "description": "Last event for the email"
          }
        }
      },
      "DomainRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Domain name",
            "example": "example.com"
          },
          "region": {
            "type": "string",
            "description": "Region for the domain"
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the domain"
          },
          "name": {
            "type": "string",
            "description": "Domain name"
          },
          "status": {
            "type": "string",
            "description": "Domain verification status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the domain was created"
          },
          "region": {
            "type": "string",
            "description": "Region for the domain"
          },
          "dkim_tokens": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "DKIM tokens for domain verification"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "record": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "ttl": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "DNS records for domain verification"
          }
        }
      },
      "ApiKeyRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the API key",
            "example": "Production"
          },
          "permission": {
            "type": "string",
            "enum": [
              "full_access",
              "sending_access"
            ],
            "description": "Permission level of the API key",
            "default": "full_access"
          },
          "domain_id": {
            "type": "string",
            "description": "Domain ID to restrict the API key to"
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the API key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the API key was created"
          }
        }
      },
      "ApiKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the API key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the API key was created"
          },
          "token": {
            "type": "string",
            "description": "The API key token"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Emails",
      "description": "Operations related to sending and retrieving emails"
    },
    {
      "name": "Domains",
      "description": "Operations related to managing domains"
    },
    {
      "name": "API Keys",
      "description": "Operations related to managing API keys"
    }
  ]
}